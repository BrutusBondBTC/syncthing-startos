id: syncthing
title: "Syncthing"
version: 2.14.1.1
release-notes: "Upgrade to EmbassyOS v0.3.0"
license: apache
wrapper-repo: "https://github.com/Start9Labs/syncthing-wrapper"
upstream-repo: "https://github.com/syncthing/syncthing"
support-site: "https://github.com/syncthing/syncthing/issues"
marketing-site: "https://syncthing.org/"
build: ["make"]
min-os-version: "0.3.0"
description:
  short: Simple cloud data storage and sharing
  long: |
    Syncthing provides a simple file managing interface which can be used to upload, download, organize, edit, and share your files.
    It allows the creation of multiple users and each user can have their own directory.
assets:
  license: LICENSE
  icon: icon.png
  instructions: INSTRUCTIONS.md
  docker-images: image.tar
main:
  type: docker
  image: main
  entrypoint: tini
  args: ["entrypoint.sh"]
  mounts:
    main: /root
  io-format: yaml
health-checks:
  version:
    name: Version
    description: Make sure that syncthing is installed

    type: docker
    image: main
    entrypoint: sh
    args: ["-c", "HOME=/home/syncthing_user syncthing cli config version get || exit 1"]
    io-format: yaml
    inject: true
config: ~
properties:
  type: docker
  image: compat
  system: true
  entrypoint: compat
  args:
    - properties
    - /root
  mounts:
    main: /root
  io-format: yaml
dependencies: {}
volumes:
  main:
    type: data
interfaces:
  main:
    name: Syncthing UI
    description: Approve folder and users from ui
    tor-config:
      port-mapping:
        8384: "80"
    lan-config:
      8384:
        ssl: true
        mapping: 443
    ui: true
    protocols:
      - tcp
      - udp

  sync-listening:
    name: Listening Port
    description: Listening Port
    tor-config:
      port-mapping:
        22000: "22000"
    lan-config:
      22000:
        ssl: false
        mapping: 22000
    ui: false
    protocols:
      - tcp
      - udp
alerts: {}
backup:
  create:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - create
      - /mnt/backup
      - /root/data
    mounts:
      BACKUP: /mnt/backup
      main: /root/data
    io-format: yaml
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - /mnt/backup
      - /root/data
    mounts:
      BACKUP: /mnt/backup
      main: /root/data
    io-format: yaml
actions:
  reset-root-user:
    name: Reset Root User
    description: Resets your root user (the first user) to username "admin" and a random password; restores any lost admin privileges.
    warning: This will invalidate existing sessions and password managers if you have them set up.
    allowed-statuses:
      - stopped
    implementation:
      type: docker
      image: main
      system: false
      entrypoint: docker_entrypoint.sh
      args: ["reset-root-user"]
      mounts:
        main: /root
      io-format: json
# id: syncthing
# version: 0.1.0
# title: syncthing
# wrapper-repo: "https://github.com/Start9Labs/syncthing-wrapper"
# upstream-repo: "https://github.com/syncthing/syncthing"
# support-site: "https://github.com/syncthing/syncthing/issues"
# license: MIT
# description:
#   short: "Syncthing is a continuous file synchronization program."
#   long: "It synchronizes files between two or more computers in real time, safely protected from prying eyes. Your data is your data alone and you deserve to choose where it is stored, whether it is shared with some third party, and how it's transmitted over the internet."
# release-notes: Initial release.
# assets:
# build:
# min-os-version: 0.3.0
# description:
#   short:
#   long:
# assets:
#   license: LICENSE
#   icon:
# main:
#   type: docker
#   image: main
#   entrypoint: tini
#   args: ["entrypoint.sh"]
#   mounts:
#     main: /home/syncthing_user
#   io-format: yaml
# health-checks:
#   version:
#     name: Version
#     description: Make sure that syncthing is installed

#     type: docker
#     image: main
#     entrypoint: sh
#     args: ["-c", "HOME=/home/syncthing_user syncthing cli config version get || exit 1"]
#     io-format: yaml
#     inject: true
# volumes:
#   main:
#     type: data

# interfaces:
#   main:
#     name: Syncthing UI
#     description: Approve folder and users from ui
#     tor-config:
#       port-mapping:
#         8384: "80"
#     lan-config:
#       8384:
#         ssl: true
#         mapping: 443
#     ui: true
#     protocols:
#       - tcp
#       - udp

#   sync-listening:
#     name: Listening Port
#     description: Listening Port
#     tor-config:
#       port-mapping:
#         22000: "22000"
#     lan-config:
#       22000:
#         ssl: false
#         mapping: 22000
#     ui: false
#     protocols:
#       - tcp
#       - udp
# backup:
#   create:
#     type: docker
#     image: compat
#     system: true
#     entrypoint: compat
#     args:
#       - duplicity
#       - create
#       - /mnt/backup
#       - /root/data
#     mounts:
#       BACKUP: /mnt/backup
#       main: /root/data
#     io-format: yaml
#   restore:
#     type: docker
#     image: compat
#     system: true
#     entrypoint: compat
#     args:
#       - duplicity
#       - restore
#       - /mnt/backup
#       - /root/data
#     mounts:
#       BACKUP: /mnt/backup
#       main: /root/data
#     io-format: yaml
# # dependencies:
# #   hello-world-dep:
# #     # The version range that is acceptable for this dependency
# #     version: ^0.1.0
# #     # if `optional` is omitted, the dependency is required, otherwise it will display this string to explain why the
# #     # dependency is optional
# #     optional: This dependency is optional because of this reason
# #     # Description of the dependency relationship
# #     decription: hello-world uses hello-world-dep to demo dependencies
# #     # If set to true it will mount the public directory of the dependency to $mount/start9/public/$dependencyId
# #     mount-public: true
# #     # If set to true it will mount the shared directory of the dependency to $mount/start9/shared/$dependencyId
# #     mount-public: true
# #     # This is a list of rules that levies requirements on the configuration of the dependency and suggests ways to
# #     # remedy any incompatibilities. Documentation of this feature is outside the scope of this example config.
# #     config: []
